from wordwield     import ww
from wordwield.lib import O


class QuadrantAnalyzer(ww.operators.Agent):
	class ResponseSchema(O):
		explanation : str   = O.Field(description='одно предложение, объясняющее доминирующее состояние персонажа и почему')
		Q0          : float = O.Field(description='нейтрал, без отклонений')
		Q1          : float = O.Field(description='страдание,тревога,беспомощность,саможалость,нытьё,вина,уныние,безысходность,поиск сочувствия,стыд')
		Q2          : float = O.Field(description='Яркий энтузиазм, любопытство, забота,старание,уступчивость,услужливость,помощь,привязанность,желание быть нужным и поддерживать других, самоотверженность')
		Q3          : float = O.Field(description='раздражение,гнев,обвинение,нападение,давление,унижение,неуважение,жёсткость,агрессия,контроль')
		Q4          : float = O.Field(description='ироничный тон,скептицизм,сарказм,снисхождение,холод,надменность,дистанция,игнор,превосходство,пассивность,уничижение')

	template = '''
		Проанализируй следующий диалог между персонажами.
		Имя анализируемого персонажа: {{name}}

		Для каждой из четырёх ролей (“квадратов Q”) оцени по шкале от 0 до 1,  
		насколько в последних репликах персонажа {{name}} прослеживается склонность к каждому из состояний
		(запятые в последующем описании состояний воспринимай как "или"):
		ОПИСАНИЯ СОСТОЯНИЙ:
		------
		{{quadrant_description}}
		------
		Диалог персонажей в формате [<имя персонажа>]: "<фраза персонажа>"
		------
		{{dialogue}}
		------
		Будь особенно внимателен к самой последней фразе персонажа {{name}}:
		"{{last_phrase}}"
		'''
	
	async def invoke(self, name, dialogue, last_phrase, unpack):
		self.state.quadrant_description = self.ResponseSchema.describe(except_keys=['explanation'])
		return await self.ask(unpack=unpack)
