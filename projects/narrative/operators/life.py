from wordwield import ww
from wordwield.lib.vdb import VDB


# character = ww.schemas.CharacterSchema.put(
# 	name          = '–í–∞—Å—è',
# 	descriptions  = ['–ø—Ä–æ—Å—Ç–æ–π —Ö–æ—Ä–æ—à–∏–π –ø–∞—Ä–µ–Ω—å 35 –ª–µ—Ç'],
# 	description   = '–ø—Ä–æ—Å—Ç–æ–π —Ö–æ—Ä–æ—à–∏–π –ø–∞—Ä–µ–Ω—å 35 –ª–µ—Ç',
# 	fear          = '–±–æ–∏—Ç—Å—è –Ω–µ –≤–ø–∏—Å–∞—Ç—å—Å—è –≤ –æ–±—â–µ—Å—Ç–≤–æ',
# 	desire        = '—Ö–æ—á–µ—Ç –±—ã—Ç—å –Ω—É–∂–Ω—ã–º –∏ –ª—é–±–∏–º—ã–º',
# 	bypass        = '—Å–ª—É–∂–µ–Ω–∏–µ, –ø–æ —ç—Ç–æ–º—É –í–∞—Å—è –∏–∑—É—á–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ',
# 	manipulation1 = '—Å–ª—É–∂–µ–Ω–∏–µ, —É–≤–∞–∂–µ–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ',
# 	manipulation2 = '—Å–ª—ë–∑—ã',
# 	resource      = '–Ω—É–∂–Ω–æ—Å—Ç—å',
# 	trigger       = '–Ω–µ–ø—Ä–∏–Ω—è—Ç—ã–π —ç–Ω—Ç—É–∑–∏–∞–∑–º',
# 	voice1        = '—è —Ö–æ—Ä–æ—à–∏–π –º–∞–ª—å—á–∏–∫ –∏ –º–Ω–æ–≥–æ–µ –º–æ–≥—É –¥–∞—Ç—å',
# 	voice2        = '—è –ø–ª–æ—Ö–æ–π –∏ –Ω–∏–∫–æ–º—É –Ω–µ –Ω—É–∂–µ–Ω',
# 	problem       = '—Å—Ç—Ä–∞—Ö –æ–±—â–µ–Ω–∏—è',
# 	mission       = '—Å—Ç–∞—Ç—å –ø–µ—Ä–≤–æ–∫–ª–∞—Å—Å–Ω—ã–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–º, —Ç–æ–≥–¥–∞ –æ–Ω –±—É–¥–µ—Ç –Ω—É–∂–µ–Ω –ª—é–¥—è–º',
# 	schtick       = '—Ö–æ—Ä–æ—à–∏–π —É—á–µ–Ω–∏–∫',
# 	speech_style  = '–∑–∞–∏–∫–∞–Ω–∏–µ'
# )

sheldon = ww.schemas.CharacterTriggersSchema(
	name = 'Sheldon Cooper',
	triggers = [
		ww.schemas.CharacterTriggerSchema(current_q='Q4', next_q='Q3', trigger_q='Q3', threshold=0.5),   # –°—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ-–æ–±–µ—Å—Ü–µ–Ω–∏–≤–∞—é—â–∏–º, –µ—Å–ª–∏ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç –∞–≥—Ä–µ—Å—Å–∏—é
		ww.schemas.CharacterTriggerSchema(current_q='Q4', next_q='Q1', trigger_q='Q1', threshold=0.6),   # –ü—Ä–æ–≤–∞–ª–∏–≤–∞–µ—Ç—Å—è –≤ —Å—Ç—Ä–∞–¥–∞–Ω–∏–µ, –µ—Å–ª–∏ —Å—Ç–∞–ª–∫–∏–≤–∞–µ—Ç—Å—è —Å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –∂–µ—Ä—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, –º–∞—Ç—å –∏–ª–∏ –≠–º–∏ –≤ —Å–ª–µ–∑–∞—Ö)
		ww.schemas.CharacterTriggerSchema(current_q='Q4', next_q='Q2', trigger_q='Q2', threshold=0.7),   # –ü—ã—Ç–∞–µ—Ç—Å—è –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å, –µ—Å–ª–∏ –∫—Ç–æ-—Ç–æ –Ω–∞—á–∏–Ω–∞–µ—Ç –∏—Å–∫—Ä–µ–Ω–Ω–µ —Å–ª—É–∂–∏—Ç—å –∏–ª–∏ –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ –Ω—ë–º (—Ä–µ–¥–∫–æ)
		ww.schemas.CharacterTriggerSchema(current_q='Q3', next_q='Q4', trigger_q='Q4', threshold=0.5),   # ‚Äú–û—Å—Ç—ã–≤–∞–µ—Ç‚Äù, –µ—Å–ª–∏ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç –ø–æ–ª–Ω—ã–π —Ö–æ–ª–æ–¥, –∏–≥–Ω–æ—Ä –∏–ª–∏ –ø—Ä–µ–≤–æ—Å—Ö–æ–¥—Å—Ç–≤–æ
		ww.schemas.CharacterTriggerSchema(current_q='Q3', next_q='Q1', trigger_q='Q1', threshold=0.7),   # –ê–≥—Ä–µ—Å—Å–∏—è —Å—Ä—ã–≤–∞–µ—Ç—Å—è –≤ –æ–±–∏–¥—É, –µ—Å–ª–∏ –¥—Ä—É–≥–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ ‚Äú–∂–µ—Ä—Ç–≤—É–µ—Ç‚Äù –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ
		ww.schemas.CharacterTriggerSchema(current_q='Q1', next_q='Q4', trigger_q='Q4', threshold=0.6),   # –ò–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∂–µ—Ä—Ç–≤—ã —É—Ö–æ–¥–∏—Ç –≤ —Ö–æ–ª–æ–¥ –∏ –∏–≥–Ω–æ—Ä, –µ—Å–ª–∏ ‚Äú–µ–≥–æ —Å—Ç—Ä–∞–¥–∞–Ω–∏—è–º –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞‚Äù
		ww.schemas.CharacterTriggerSchema(current_q='Q1', next_q='Q2', trigger_q='Q2', threshold=0.6),   # –ï—Å–ª–∏ –∫—Ç–æ-—Ç–æ –∏—Å–∫—Ä–µ–Ω–Ω–µ –∑–∞–±–æ—Ç–∏—Ç—Å—è ‚Äî –º–æ–∂–µ—Ç –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ ‚Äú—Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ‚Äù
		ww.schemas.CharacterTriggerSchema(current_q='Q2', next_q='Q4', trigger_q='Q4', threshold=0.7),   # –ü–æ–ø—ã—Ç–∫–∞ —Å–ª—É–∂–∏—Ç—å –≤—Å—Ç—Ä–µ—á–∞–µ—Ç –∏–≥–Ω–æ—Ä ‚Äî —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è ‚Äú–Ω–∞–¥ —Å–∏—Ç—É–∞—Ü–∏–µ–π‚Äù
		ww.schemas.CharacterTriggerSchema(current_q='Q2', next_q='Q3', trigger_q='Q3', threshold=0.5),   # –ü–æ–ø—ã—Ç–∫–∞ —Å–ª—É–∂–∏—Ç—å –≤—Å—Ç—Ä–µ—á–∞–µ—Ç –∞–≥—Ä–µ—Å—Å–∏—é ‚Äî –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ —Ä–∞–∑–¥—Ä–∞–∂—ë–Ω–Ω—É—é –∞–≥—Ä–µ—Å—Å–∏—é
	]
)


character = ww.schemas.CharacterSchema.put(
	name          = '–í–∞—Å—è',
	descriptions  = ['—É–º–Ω–∏–∫ 35 –ª–µ—Ç'],
	description   = '—É–º–Ω–∏–∫ 35 –ª–µ—Ç',
	fear          = '–±–æ–∏—Ç—Å—è –ø–æ–∫–∞–∑–∞—Ç—å—Å—è —Å–ª–∞–±—ã–º',
	desire        = '—Ö–æ—á–µ—Ç –±—ã—Ç—å —É–≤–∏–¥–µ–Ω–Ω—ã–º',
	bypass        = '—Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–∏–µ –∏ –≥–Ω–µ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è',
	manipulation1 = '–≥–Ω–µ–≤, –Ω–µ—É–≤–∞–∂–µ–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ',
	# manipulation2 = '—Å–ª—ë–∑—ã',
	resource      = '—É–≤–∏–¥–µ–Ω–Ω–æ—Å—Ç—å',
	trigger       = '–Ω–µ–ø—Ä–∏–Ω—è—Ç—ã–π —ç–Ω—Ç—É–∑–∏–∞–∑–º',
	voice1        = '—è –æ—Ñ–∏–≥–µ–Ω–Ω—ã–π –∏ —Å –º–æ–∏–º–∏ —á—É–≤—Å—Ç–≤–∞–º–∏ —Å—Ç–æ–∏—Ç —Å—á–∏—Ç–∞—Ç—å—Å—è, –∏–Ω–∞—á–µ –≤–∞–º –±—É–¥–µ—Ç –ø–ª–æ—Ö–æ',
	# voice2        = '—è –ø–ª–æ—Ö–æ–π –∏ –Ω–∏–∫–æ–º—É –Ω–µ –Ω—É–∂–µ–Ω',
	problem       = '—Å—Ç—Ä–∞—Ö –±–µ—Å—Å–∏–ª–∏—è',
	mission       = '—Å—Ç–∞—Ç—å –ø–µ—Ä–≤–æ–∫–ª–∞—Å—Å–Ω—ã–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–º, —Ç–æ–≥–¥–∞ –≤—Å–µ —É–≤–∏–¥—è—Ç –∫–∞–∫–æ–π –æ–Ω –∫–ª–∞—Å—Å–Ω—ã–π. –¢–∞–∫ –∂–µ –Ω–µ–∑–∞–º–µ—Ç–Ω–æ –∏ –∏—Å–ø–æ–¥–≤–æ–ª—å –ø—ã—Ç–∞–µ—Ç—Å—è –ø—Ä–æ–¥–∞—Ç—å —Å–≤–æ–π —Å—Ç–∞—Ä—ã–π —Ç–æ—Å—Ç–µ—Ä',
	schtick       = '–≥—Ä—É–±–æ—Å—Ç—å —Ä–µ—á–∏',
	speech_style  = '–∂–µ—Å—Ç–∫–∏–π –∏ –Ω–∞—Å–º–µ—à–ª–∏–≤—ã–π'
)

vasya_messages = [
	'–°–∞—à–∞, –æ–±—ä—è—Å–Ω–∏, –∑–∞—á–µ–º –≤–æ–æ–±—â–µ –Ω—É–∂–Ω—ã —ç—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –∫–æ–¥–µ?',
	'–ê –Ω–µ–ª—å–∑—è –ø—Ä–æ—Å—Ç–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫—É—Å–æ–∫ –∫–æ–¥–∞ —Ç—É–¥–∞, –≥–¥–µ –Ω—É–∂–Ω–æ?',
	'–ü–æ–Ω—è–ª. –ê –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–∞—è?',
	'–ê –∫–∞–∫ —Ñ—É–Ω–∫—Ü–∏—è —É–∑–Ω–∞–µ—Ç, —Å –∫–∞–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ —Ä–∞–±–æ—Ç–∞—Ç—å?',
	'–ê —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ?',
	'–ê –º–æ–∂–Ω–æ –ª–∏ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã–∑—ã–≤–∞—Ç—å –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é?',
]

sasha_messages = [
	'–§—É–Ω–∫—Ü–∏–∏ –ø–æ–º–æ–≥–∞—é—Ç –Ω–µ –ø–æ–≤—Ç–æ—Ä—è—Ç—å –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –∫–æ–¥, –∏—Ö –º–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å —Å–∫–æ–ª—å–∫–æ —É–≥–æ–¥–Ω–æ —Ä–∞–∑.',
	'–ú–æ–∂–Ω–æ, –Ω–æ —Ç–æ–≥–¥–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ —á—Ç–æ-—Ç–æ –ø–æ–º–µ–Ω—è—Ç—å, –ø—Ä–∏–¥–µ—Ç—Å—è –ø—Ä–∞–≤–∏—Ç—å –≤–µ–∑–¥–µ –≤—Ä—É—á–Ω—É—é.',
	'–ó–Ω–∞—á–∏—Ç, –µ—ë –º–æ–∂–Ω–æ —Ä–∞–∑–±–∏—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∞–ª–µ–Ω—å–∫–∏—Ö, –∫–∞–∂–¥–∞—è –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –∑–∞ —Å–≤–æ—é –∑–∞–¥–∞—á—É.',
	'–¢—ã –º–æ–∂–µ—à—å –ø–µ—Ä–µ–¥–∞—Ç—å –µ–π –∞—Ä–≥—É–º–µ–Ω—Ç—ã ‚Äî –∑–Ω–∞—á–µ–Ω–∏—è, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –æ–Ω–∞ –±—É–¥–µ—Ç —á—Ç–æ-—Ç–æ –¥–µ–ª–∞—Ç—å.',
	'–û–±—ã—á–Ω–æ –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã —á–µ—Ä–µ–∑ return.',
	'–î–∞, –∫–æ–Ω–µ—á–Ω–æ! –¢–∞–∫ —Å—Ç—Ä–æ–∏—Ç—Å—è –≤—Å—è –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã: —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã–∑—ã–≤–∞—é—Ç –¥—Ä—É–≥ –¥—Ä—É–≥–∞.',
]

vasya_stream = ww.schemas.StreamSchema.put(
	name   = '–í–∞—Å—è',
	role   = 'user',
	author = '–í–∞—Å—è'
)

sasha_stream = ww.schemas.StreamSchema.put(
	name   = '–°–∞—à–∞',
	role   = 'assistant',
	author = '–°–∞—à–∞'
)

setting = '''
	–í–∞—Å—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –æ–±—É—á–µ–Ω–∏–∏ —É –°–∞—à–∏ - –ø—Ä–æ—Ñ–µ—Å—Å–æ—Ä–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.
	–í–∞—Å—è –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –æ–¥–∏–Ω-–Ω–∞-–æ–¥–∏–Ω –∏ –ø–ª–∞—Ç–∏—Ç –∑–∞ —ç—Ç–æ –Ω–µ–º–∞–ª—ã–µ –¥–µ–Ω—å–≥–∏
	—Ç–∞–∫ –∫–∞–∫ –í–∞—Å–µ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—Å–¥–∞—Ç—å —ç–∫–∑–∞–º–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –æ–Ω –∑–∞–≤–∞–ª–∏–ª.
'''

for v, s in zip(vasya_messages, sasha_messages):
	vasya_stream.write(v)
	sasha_stream.write(s)

class Life(ww.operators.Agent):
	agents = {
		'character' : ww.operators.life.Character,
	}

	def get_next_author(self):
		dialog_stream = ww.schemas.StreamSchema.zip(*self.state.actors)
		author = self.state.human
		if last_gulp := dialog_stream.last_gulp():
			idx    = self.state.actors.index(last_gulp.author)
			author = self.state.actors[(idx + 1) % len(self.state.actors)]
		return author

	# async def summarize(self, author, conversation, beats, length):
	# 	return await self.agents.summarizer(
	# 		author,
	# 		conversation.last(beats).to_prompt(),
	# 		length
	# 	)

	# async def get_summaries(self, author, conversation):
	# 	if len(conversation):
	# 		return {
	# 			'long'  : await self.summarize(author, conversation, -1, '–æ–¥–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ'),
	# 			'short' : await self.summarize(author, conversation, 4, '–æ–¥–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ'),
	# 			'last'  : conversation.last(1).to_prompt(),
	# 		}
		
	async def invoke(self, human, actors):
		streams = {
			'–í–∞—Å—è': vasya_stream,
			'–°–∞—à–∞': sasha_stream,
		}

		while True:
			author  = self.get_next_author()
			message = None

			# conversation = ww.schemas.StreamSchema.zip(*actors)
			
			if author == human:
				message = input(f'{human}: ')
				streams[human].write(message)
			else:
				# summaries = await self.get_summaries(author, conversation=conversation)
				message   = await self.agents.character(author, actors, setting)
				print(f'\nü§ñ {author}: {message}\n')

			